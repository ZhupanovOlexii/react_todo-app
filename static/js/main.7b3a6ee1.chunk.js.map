{"version":3,"sources":["TodoItem.js","TodoList.js","NewTodo.js","App.js","index.js"],"names":["TodoItem","this","props","todo","deleteTodo","handleChangeStatus","className","classNames","completed","key","id","type","checked","onChange","htmlFor","title","onClick","React","PureComponent","TodoList","todos","handleMarkAll","map","NewTodo","state","handleChangeTitle","target","setState","value","trimLeft","replace","resetForm","prevState","handleSubmit","event","preventDefault","length","newTodo","onSubmit","placeholder","Component","App","every","indexOfDeletedTodo","findIndex","item","newListOfTodos","splice","countOfNotFinishedTodos","filter","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b3a6ee1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nclass TodoItem extends React.PureComponent {\n  render() {\n    const { todo, deleteTodo, handleChangeStatus } = this.props;\n\n    return (\n\n      <>\n        <li\n          className={classNames({\n            completed: todo.completed,\n          })}\n          key={todo.id}\n        >\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              checked={todo.completed}\n              id={todo.id}\n              onChange={() => handleChangeStatus(todo.id)\n              }\n            />\n            <label\n              htmlFor={todo.id}\n            >\n              {todo.title}\n            </label>\n            <button\n              id={todo.id}\n              type=\"button\"\n              className=\"destroy\"\n              onClick={deleteTodo}\n\n            />\n          </div>\n          <input\n            type=\"text\"\n            className=\"edit\"\n\n          />\n        </li>\n      </>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n\n  handleChangeStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nclass TodoList extends React.PureComponent {\n  render() {\n    const { todos, deleteTodo, handleChangeStatus, handleMarkAll } = this.props;\n\n    return (\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          onChange={handleMarkAll}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        <ul className=\"todo-list\">\n          {todos.map(todo => (\n            <TodoItem\n              todo={todo}\n              handleChangeStatus={handleChangeStatus}\n              key={todo.id}\n              deleteTodo={deleteTodo}\n            />\n          ))}\n        </ul>\n      </section>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired,\n  })).isRequired,\n  handleChangeStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  handleMarkAll: PropTypes.func.isRequired,\n\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewTodo extends React.Component {\n  state = {\n    title: '',\n    id: 0,\n    completed: false,\n\n  }\n\n  handleChangeTitle = ({ target }) => {\n    this.setState({\n      title: target.value.trimLeft().replace(/[^a-z\\s]/gi, ''),\n    });\n  }\n\n  resetForm = () => {\n    this.setState(prevState => (\n      {\n        title: '',\n        id: prevState.id + 1,\n        completed: false,\n      }\n    ));\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title, id, completed } = this.state;\n\n    if (!title.length) {\n      this.setState({\n        title: '',\n      });\n\n      return;\n    }\n\n    this.props.newTodo({\n      title,\n      id: id + 1,\n      completed,\n\n    });\n\n    this.resetForm();\n  }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.handleChangeTitle}\n          value={title}\n        />\n      </form>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  newTodo: PropTypes.func.isRequired,\n};\n\nexport default NewTodo;\n","import React from 'react';\nimport TodoList from './TodoList';\nimport NewTodo from './NewTodo';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    // title: '',\n\n  }\n\n  newTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n    }));\n  }\n\n  handleMarkAll =() => {\n    if (this.state.todos.every(todo => todo.completed === true)) {\n      this.setState(state => ({\n        todos: state.todos.map(todo => (\n          {\n            ...todo,\n            completed: false,\n          }\n        )),\n      }));\n    } else {\n      this.setState(state => ({\n        todos: state.todos.map(todo => (\n          {\n            ...todo,\n            completed: true,\n          }\n        )),\n      }));\n    }\n  }\n\n  handleChangeStatus = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  deleteTodo = ({ target }) => {\n    const indexOfDeletedTodo = this.state.todos\n      .findIndex(item => item.id === +target.id);\n\n    this.setState((prevState) => {\n      const newListOfTodos = [...prevState.todos];\n\n      newListOfTodos.splice(indexOfDeletedTodo, 1);\n\n      return (\n        { todos: [...newListOfTodos] }\n      );\n    });\n  }\n\n  render() {\n    const { todos } = this.state;\n    const countOfNotFinishedTodos = todos\n      .filter(todo => todo.completed === false).length;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n        </header>\n        <NewTodo\n          newTodo={this.newTodo}\n        />\n        <TodoList\n          todos={this.state.todos}\n          handleChangeStatus={this.handleChangeStatus}\n          deleteTodo={this.deleteTodo}\n          handleMarkAll={this.handleMarkAll}\n        />\n        {todos.length > 0\n          && (\n            <footer className=\"footer\">\n              <span className=\"todo-count\">\n                {countOfNotFinishedTodos}\n                {' '}\n                items left\n              </span>\n\n              <ul className=\"filters\">\n                <li>\n                  <a href=\"#/\" className=\"selected\">All</a>\n                </li>\n\n                <li>\n                  <a href=\"#/active\">Active</a>\n                </li>\n\n                <li>\n                  <a href=\"#/completed\">Completed</a>\n                </li>\n              </ul>\n\n              <button type=\"button\" className=\"clear-completed\">\n                Clear completed\n              </button>\n            </footer>\n          )\n        }\n      </section>\n    );\n  }\n}\n\n// function App() {\n//   return (\n//     <section className=\"todoapp\">\n//       <header className=\"header\">\n//         <h1>todos</h1>\n\n//         <input\n//           className=\"new-todo\"\n//           placeholder=\"What needs to be done?\"\n//         />\n//       </header>\n\n//       <section className=\"main\">\n//         <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n//         <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n//         <ul className=\"todo-list\">\n//           <li>\n//             <div className=\"view\">\n//               <input type=\"checkbox\" className=\"toggle\" id=\"todo-1\" />\n//               <label htmlFor=\"todo-1\">asdfghj</label>\n//               <button type=\"button\" className=\"destroy\" />\n//             </div>\n//             <input type=\"text\" className=\"edit\" />\n//           </li>\n\n//           <li className=\"completed\">\n//             <div className=\"view\">\n//               <input type=\"checkbox\" className=\"toggle\" id=\"todo-2\" />\n//               <label htmlFor=\"todo-2\">qwertyuio</label>\n//               <button type=\"button\" className=\"destroy\" />\n//             </div>\n//             <input type=\"text\" className=\"edit\" />\n//           </li>\n\n//           <li className=\"editing\">\n//             <div className=\"view\">\n//               <input type=\"checkbox\" className=\"toggle\" id=\"todo-3\" />\n//               <label htmlFor=\"todo-3\">zxcvbnm</label>\n//               <button type=\"button\" className=\"destroy\" />\n//             </div>\n//             <input type=\"text\" className=\"edit\" />\n//           </li>\n\n//           <li>\n//             <div className=\"view\">\n//               <input type=\"checkbox\" className=\"toggle\" id=\"todo-4\" />\n//               <label htmlFor=\"todo-4\">1234567890</label>\n//               <button type=\"button\" className=\"destroy\" />\n//             </div>\n//             <input type=\"text\" className=\"edit\" />\n//           </li>\n//         </ul>\n//       </section>\n\n//       <footer className=\"footer\">\n//         <span className=\"todo-count\">\n//           3 items left\n//         </span>\n\n//         <ul className=\"filters\">\n//           <li>\n//             <a href=\"#/\" className=\"selected\">All</a>\n//           </li>\n\n//           <li>\n//             <a href=\"#/active\">Active</a>\n//           </li>\n\n//           <li>\n//             <a href=\"#/completed\">Completed</a>\n//           </li>\n//         </ul>\n\n//         <button type=\"button\" className=\"clear-completed\">\n//           Clear completed\n//         </button>\n//       </footer>\n//     </section>\n//   );\n// }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
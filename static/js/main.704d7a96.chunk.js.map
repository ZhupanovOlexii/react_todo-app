{"version":3,"sources":["TodoItem.js","TodoList.js","NewTodo.js","App.js","index.js"],"names":["TodoItem","this","props","todo","deleteTodo","handleChangeStatus","completed","className","type","checked","id","onChange","htmlFor","title","onClick","React","PureComponent","TodoList","todos","map","key","NewTodo","state","handleChangeTitle","target","setState","value","trimLeft","replace","resetForm","prevState","handleSubmit","event","preventDefault","newTodo","onSubmit","placeholder","Component","App","indexOfDeletedTodo","findIndex","item","newListOfTodos","splice","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.704d7a96.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.PureComponent {\n  render() {\n    const { todo, deleteTodo, handleChangeStatus, completed } = this.props;\n\n    return (\n\n      <>\n        <li>\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              checked={completed}\n              id={todo.id}\n              onChange={() => handleChangeStatus(todo.id)\n              }\n            />\n            <label\n              htmlFor={todo.id}\n            >\n              {todo.title}\n            </label>\n            <button\n              id={todo.id}\n              type=\"button\"\n              className=\"destroy\"\n              onClick={deleteTodo}\n\n            />\n          </div>\n          <input\n            type=\"text\"\n            className=\"edit\"\n\n          />\n        </li>\n      </>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n  completed: PropTypes.bool.isRequired,\n  handleChangeStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nclass TodoList extends React.PureComponent {\n  render() {\n    const { todos, deleteTodo, handleChangeStatus } = this.props;\n\n    return (\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        <ul className=\"todo-list\">\n          {todos.map(todo => (\n            <TodoItem\n              todo={todo}\n              handleChangeStatus={handleChangeStatus}\n              key={todo.id}\n              deleteTodo={deleteTodo}\n            />\n          ))}\n        </ul>\n      </section>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired,\n  })).isRequired,\n  handleChangeStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewTodo extends React.Component {\n  state = {\n    title: '',\n    id: 0,\n    // completed: false,\n  }\n\n  handleChangeTitle = ({ target }) => {\n    this.setState({\n      title: target.value.trimLeft().replace(/[^a-z\\s]/gi, ''),\n    });\n  }\n\n  resetForm = () => {\n    this.setState(prevState => (\n      {\n        title: '',\n        id: prevState.id + 1,\n        // completed: false,\n      }\n    ));\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title, id } = this.state;\n\n    this.props.newTodo({\n      title,\n      id: id + 1,\n\n    });\n\n    this.resetForm();\n  }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.handleChangeTitle}\n          value={title}\n        />\n      </form>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  newTodo: PropTypes.func.isRequired,\n};\n\nexport default NewTodo;\n","import React from 'react';\nimport TodoList from './TodoList';\nimport NewTodo from './NewTodo';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    // title: '',\n  }\n\n  newTodo = (todo) => {\n    this.setState(state => ({\n      todos: [...state.todos, todo],\n    }));\n  }\n\n  handleChangeStatus = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  deleteTodo = ({ target }) => {\n    const indexOfDeletedTodo = this.state.todos\n      .findIndex(item => item.id === +target.id);\n\n    this.setState((prevState) => {\n      const newListOfTodos = [...prevState.todos];\n\n      newListOfTodos.splice(indexOfDeletedTodo, 1);\n\n      return (\n        { todos: [...newListOfTodos] }\n      );\n    });\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n        </header>\n        <NewTodo\n          newTodo={this.newTodo}\n        />\n        <TodoList\n          todos={this.state.todos}\n          handleChangeStatus={this.handleChangeStatus}\n          deleteTodo={this.deleteTodo}\n        />\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            3 items left\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a href=\"#/\" className=\"selected\">All</a>\n            </li>\n\n            <li>\n              <a href=\"#/active\">Active</a>\n            </li>\n\n            <li>\n              <a href=\"#/completed\">Completed</a>\n            </li>\n          </ul>\n\n          <button type=\"button\" className=\"clear-completed\">\n            Clear completed\n          </button>\n        </footer>\n      </section>\n\n    );\n  }\n}\n\n// function App() {\n//   return (\n//     <section className=\"todoapp\">\n//       <header className=\"header\">\n//         <h1>todos</h1>\n\n//         <input\n//           className=\"new-todo\"\n//           placeholder=\"What needs to be done?\"\n//         />\n//       </header>\n\n//       <section className=\"main\">\n//         <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n//         <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n//         <ul className=\"todo-list\">\n//           <li>\n//             <div className=\"view\">\n//               <input type=\"checkbox\" className=\"toggle\" id=\"todo-1\" />\n//               <label htmlFor=\"todo-1\">asdfghj</label>\n//               <button type=\"button\" className=\"destroy\" />\n//             </div>\n//             <input type=\"text\" className=\"edit\" />\n//           </li>\n\n//           <li className=\"completed\">\n//             <div className=\"view\">\n//               <input type=\"checkbox\" className=\"toggle\" id=\"todo-2\" />\n//               <label htmlFor=\"todo-2\">qwertyuio</label>\n//               <button type=\"button\" className=\"destroy\" />\n//             </div>\n//             <input type=\"text\" className=\"edit\" />\n//           </li>\n\n//           <li className=\"editing\">\n//             <div className=\"view\">\n//               <input type=\"checkbox\" className=\"toggle\" id=\"todo-3\" />\n//               <label htmlFor=\"todo-3\">zxcvbnm</label>\n//               <button type=\"button\" className=\"destroy\" />\n//             </div>\n//             <input type=\"text\" className=\"edit\" />\n//           </li>\n\n//           <li>\n//             <div className=\"view\">\n//               <input type=\"checkbox\" className=\"toggle\" id=\"todo-4\" />\n//               <label htmlFor=\"todo-4\">1234567890</label>\n//               <button type=\"button\" className=\"destroy\" />\n//             </div>\n//             <input type=\"text\" className=\"edit\" />\n//           </li>\n//         </ul>\n//       </section>\n\n//       <footer className=\"footer\">\n//         <span className=\"todo-count\">\n//           3 items left\n//         </span>\n\n//         <ul className=\"filters\">\n//           <li>\n//             <a href=\"#/\" className=\"selected\">All</a>\n//           </li>\n\n//           <li>\n//             <a href=\"#/active\">Active</a>\n//           </li>\n\n//           <li>\n//             <a href=\"#/completed\">Completed</a>\n//           </li>\n//         </ul>\n\n//         <button type=\"button\" className=\"clear-completed\">\n//           Clear completed\n//         </button>\n//       </footer>\n//     </section>\n//   );\n// }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}